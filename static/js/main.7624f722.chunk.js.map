{"version":3,"sources":["components/Seasons.jsx","components/Weekdays.jsx","components/Dayparts.jsx","components/Timelimit.jsx","components/Result.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Seasons","props","options","value","label","handleChange","newValue","console","log","handleSeasonChange","bind","className","this","onChange","seasonOption","placeholder","required","Component","Weekdays","useState","setWeekDay","Dayparts","setDayPart","useStyles","makeStyles","theme","root","width","margin","height","spacing","marks","valuetext","Timelimit","hour","setHour","classes","Slider","defaultValue","getAriaValueText","min","max","step","valueLabelDisplay","event","maxWidth","media","paddingTop","Footer","currentYear","Date","getFullYear","App","state","handleSubmit","setState","preventDefault","onSubmit","handleWeekdayChange","weekdayValue","handleDaypartChange","daypartValue","handleTimeChange","timeValue","Button","type","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7624f722.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\n\r\n\r\nclass Seasons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  // constructor(props) {\r\n  //   super(props);\r\n    // this.state = {\r\n    //   // options: [],\r\n    //   season: {\r\n    //     value: \"\",\r\n    //     label: \"\",\r\n    //   },\r\n    // };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n   options = [\r\n    { value: \"winter\", label: \"Winter\" },\r\n    { value: \"spring\", label: \"Spring\" },\r\n    { value: \"summer\", label: \"Summer\" },\r\n    { value: \"fall\", label: \"Fall\" },\r\n  ];\r\n\r\n  // handleChange(newValue) {\r\n  //   // this.setState({\r\n  //   //   value: newValue.value,\r\n  //   //   label: newValue.label,\r\n  //   // });\r\n  //   console.log(newValue);\r\n  //   this.props.handleSeasonChange(newValue);\r\n  // }\r\n\r\n  handleChange = newValue => {\r\n    console.log(\"season\", newValue);\r\n    // this.setState({ value: newValue.value });\r\n    this.props.handleSeasonChange(newValue);\r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Dropdown\r\n          className=\"dropDown\"\r\n          options={this.options}\r\n          onChange={this.handleChange}\r\n          value={this.props.seasonOption}\r\n          placeholder=\"Select an option\"\r\n          required={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Seasons;\r\n","import React, {useState} from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Weekdays(props) {\r\n\r\n  const [weekDay, setWeekDay] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n\r\n  const options = [\r\n    { value: \"sunday\", label: \"Sunday\" },\r\n    { value: \"monday\", label: \"Monday\" },\r\n    { value: \"tuesday\", label: \"Tuesday\" },\r\n    { value: \"wednesday\", label: \"Wednesday\" },\r\n    { value: \"thursday\", label: \"Thursday\" },\r\n    { value: \"friday\", label: \"Friday\" },\r\n    { value: \"saturday\", label: \"Saturday\" }\r\n  ];\r\n\r\n  // const defaultOption = options[0];\r\n\r\n  function handleWeekdayChange(newValue) {\r\n    console.log(newValue);\r\n    setWeekDay({\r\n      value: newValue.value,\r\n      label: newValue.label,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        className=\"dropDown\"\r\n        options={options}\r\n        // onChange={this._onSelect}\r\n        onChange={handleWeekdayChange}\r\n        value={options.newValue}\r\n        placeholder=\"Select an option\"\r\n        // required={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weekdays;\r\n","import React, {useState} from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Dayparts(props) {\r\n\r\n  const [dayPart, setDayPart] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n\r\n  const options = [\r\n    { value: \"morning\", label: \"Morning\" },\r\n    { value: \"noon\", label: \"Noon\" },\r\n    { value: \"evening\", label: \"Evening\" },\r\n    { value: \"night\", label: \"Night\" },\r\n  ];\r\n\r\n  // const defaultOption = options[0];\r\n\r\n  function handleDaypartChange(newValue) {\r\n    console.log(newValue);\r\n    setDayPart({\r\n      value: newValue.value,\r\n      label: newValue.label,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropDown\">\r\n      <Dropdown\r\n        options={options}\r\n        // onChange={this._onSelect}\r\n        onChange={handleDaypartChange}\r\n        value={options.newValue}\r\n        placeholder=\"Select an option\"\r\n        // required={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dayparts;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"@media only screen and (max-width: 600px)\": {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  margin: {\r\n    height: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 1,\r\n    label: \"1\",\r\n  },\r\n  {\r\n    value: 6,\r\n    label: \"6\",\r\n  },\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\n// function DiscreteSlider() {\r\n//   const classes = useStyles();\r\n// }\r\n\r\nfunction Timelimit(props) {\r\n  const [hour, setHour] = useState(1);\r\n\r\n  function handleTimeChange(event, newValue) {\r\n    setHour(newValue);\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        className=\"slider\"\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        min={1}\r\n        max={6}\r\n        step={1}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n        value={hour}\r\n        onChange={handleTimeChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timelimit;\r\n","import React from \"react\";\r\nimport { Card, CardContent, CardHeader, CardMedia } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 700,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n}));\r\n\r\nfunction Result(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardHeader title={props.activity} />\r\n        <CardContent>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={props.img}\r\n            title={props.activity}\r\n            alt=\"Activity image\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright Viktoriia Davydova ⓒ {currentYear}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/styles.css\"\r\nimport { Button } from \"react-bootstrap\";\r\nimport Seasons from \"./Seasons\";\r\nimport Weekdays from \"./Weekdays\";\r\nimport Dayparts from \"./Dayparts\";\r\nimport Timelimit from \"./Timelimit\";\r\nimport Result from \"./Result\";\r\nimport Footer from \"./Footer\";\r\nimport results from \"../todoDB\";\r\n\r\nfunction createResult(result) {\r\n  return (\r\n    <Result\r\n      key={result.id}\r\n      id={result.id}\r\n      activity={result.activity}\r\n      img={result.img}\r\n    />\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // options: [],\r\n      seasonOption: {\r\n        value: \"\",\r\n        label: \"\",\r\n      },\r\n    };\r\n\r\n    this.handleSeasonChange = this.handleSeasonChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // handleSeasonChange( newValue) {\r\n  //   this.setState({\r\n  //     seasonOption: {\r\n  //       value: newValue.value,\r\n  //       label: newValue.label,\r\n  //     },\r\n  //   });\r\n  //   // console.log(\"handle season \" + seasonOption);\r\n  // }\r\n\r\n  handleSeasonChange( newValue) {\r\n    this.setState({\r\n      seasonOption: {\r\n        value: newValue.value,\r\n        label: newValue.label,\r\n      },\r\n    });\r\n    console.log(\"handle season \" , this.state.seasonOption);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"submit\", this.state.seasonOption);\r\n  }\r\n\r\n  //  submitResult(event) {\r\n  //   // console.log(props.state.daypartValue);\r\n  // }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <h1>To do or not to do?</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <h2>Choose a season</h2>\r\n              <Seasons\r\n                onChange={this.handleSeasonChange}\r\n                value={this.state.seasonOption}\r\n                options={this.options}\r\n              />\r\n              <h2>Choose a day of the week</h2>\r\n              <Weekdays\r\n                onChange={this.handleWeekdayChange}\r\n                weekdayValue={this.value}\r\n              />\r\n              <h2>Chose a part of the day</h2>\r\n              <Dayparts\r\n                onChange={this.handleDaypartChange}\r\n                daypartValue={this.value}\r\n              />\r\n              <h2>How many free hours do you have?</h2>\r\n              <br></br>\r\n              <Timelimit\r\n                onChange={this.handleTimeChange}\r\n                timeValue={this.value}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                size=\"lg\"\r\n                // onClick={this.submitResult}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"resultStyle\">\r\n              {/* {results.map(createResult)} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}