[{"D:\\IT\\projects\\todo-ornot-todo\\src\\index.js":"1","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\App.jsx":"2","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Seasons.jsx":"3","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Weekdays.jsx":"4","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Timelimit.jsx":"5","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Footer.jsx":"6","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Dayparts.jsx":"7","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Result.jsx":"8","D:\\IT\\projects\\todo-ornot-todo\\src\\todoDB.js":"9"},{"size":156,"mtime":1609796428015,"results":"10","hashOfConfig":"11"},{"size":3096,"mtime":1610247367086,"results":"12","hashOfConfig":"11"},{"size":1397,"mtime":1610257220928,"results":"13","hashOfConfig":"11"},{"size":1122,"mtime":1609995969517,"results":"14","hashOfConfig":"11"},{"size":1169,"mtime":1609977493850,"results":"15","hashOfConfig":"11"},{"size":237,"mtime":1609814043649,"results":"16","hashOfConfig":"11"},{"size":967,"mtime":1609995948234,"results":"17","hashOfConfig":"11"},{"size":775,"mtime":1609963470394,"results":"18","hashOfConfig":"11"},{"size":13557,"mtime":1609961418496,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9ah2g7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\IT\\projects\\todo-ornot-todo\\src\\index.js",[],["43","44"],"D:\\IT\\projects\\todo-ornot-todo\\src\\components\\App.jsx",["45","46"],"import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Seasons from \"./Seasons\";\r\nimport Weekdays from \"./Weekdays\";\r\nimport Dayparts from \"./Dayparts\";\r\nimport Timelimit from \"./Timelimit\";\r\nimport Result from \"./Result\";\r\nimport Footer from \"./Footer\";\r\nimport results from \"../todoDB\";\r\n\r\nfunction createResult(result) {\r\n  return (\r\n    <Result\r\n      key={result.id}\r\n      id={result.id}\r\n      activity={result.activity}\r\n      img={result.img}\r\n    />\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // options: [],\r\n      seasonOption: {\r\n        value: \"\",\r\n        label: \"\",\r\n      },\r\n    };\r\n\r\n    this.handleSeasonChange = this.handleSeasonChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // handleSeasonChange( newValue) {\r\n  //   this.setState({\r\n  //     seasonOption: {\r\n  //       value: newValue.value,\r\n  //       label: newValue.label,\r\n  //     },\r\n  //   });\r\n  //   // console.log(\"handle season \" + seasonOption);\r\n  // }\r\n\r\n  handleSeasonChange( newValue) {\r\n    this.setState({\r\n      seasonOption: {\r\n        value: newValue.value,\r\n        label: newValue.label,\r\n      },\r\n    });\r\n    console.log(\"handle season \" , this.state.seasonOption);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"submit\", this.state.seasonOption);\r\n  }\r\n\r\n  //  submitResult(event) {\r\n  //   // console.log(props.state.daypartValue);\r\n  // }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <h1>To do or not to do?</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <h2>Choose a season</h2>\r\n              <Seasons\r\n                onChange={this.handleSeasonChange}\r\n                value={this.state.seasonOption}\r\n                options={this.options}\r\n              />\r\n              <h2>Choose a day of the week</h2>\r\n              <Weekdays\r\n                onChange={this.handleWeekdayChange}\r\n                weekdayValue={this.value}\r\n              />\r\n              <h2>Chose a part of the day</h2>\r\n              <Dayparts\r\n                onChange={this.handleDaypartChange}\r\n                daypartValue={this.value}\r\n              />\r\n              <h2>How many free hours do you have?</h2>\r\n              <br></br>\r\n              <Timelimit\r\n                onChange={this.handleTimeChange}\r\n                timeValue={this.value}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                size=\"lg\"\r\n                // onClick={this.submitResult}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"resultStyle\">\r\n              {/* {results.map(createResult)} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Seasons.jsx",[],"D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Weekdays.jsx",["47"],"import React, {useState} from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Weekdays(props) {\r\n\r\n  const [weekDay, setWeekDay] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n\r\n  const options = [\r\n    { value: \"sunday\", label: \"Sunday\" },\r\n    { value: \"monday\", label: \"Monday\" },\r\n    { value: \"tuesday\", label: \"Tuesday\" },\r\n    { value: \"wednesday\", label: \"Wednesday\" },\r\n    { value: \"thursday\", label: \"Thursday\" },\r\n    { value: \"friday\", label: \"Friday\" },\r\n    { value: \"saturday\", label: \"Saturday\" }\r\n  ];\r\n\r\n  // const defaultOption = options[0];\r\n\r\n  function handleWeekdayChange(newValue) {\r\n    console.log(newValue);\r\n    setWeekDay({\r\n      value: newValue.value,\r\n      label: newValue.label,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        className=\"dropDown\"\r\n        options={options}\r\n        // onChange={this._onSelect}\r\n        onChange={handleWeekdayChange}\r\n        value={options.newValue}\r\n        placeholder=\"Select an option\"\r\n        // required={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weekdays;\r\n","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Timelimit.jsx",[],"D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Footer.jsx",[],["48","49"],"D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Dayparts.jsx",["50"],"import React, {useState} from \"react\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction Dayparts(props) {\r\n\r\n  const [dayPart, setDayPart] = useState({\r\n    value: \"\",\r\n    label: \"\",\r\n  });\r\n\r\n  const options = [\r\n    { value: \"morning\", label: \"Morning\" },\r\n    { value: \"noon\", label: \"Noon\" },\r\n    { value: \"evening\", label: \"Evening\" },\r\n    { value: \"night\", label: \"Night\" },\r\n  ];\r\n\r\n  // const defaultOption = options[0];\r\n\r\n  function handleDaypartChange(newValue) {\r\n    console.log(newValue);\r\n    setDayPart({\r\n      value: newValue.value,\r\n      label: newValue.label,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropDown\">\r\n      <Dropdown\r\n        options={options}\r\n        // onChange={this._onSelect}\r\n        onChange={handleDaypartChange}\r\n        value={options.newValue}\r\n        placeholder=\"Select an option\"\r\n        // required={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dayparts;\r\n","D:\\IT\\projects\\todo-ornot-todo\\src\\components\\Result.jsx",[],"D:\\IT\\projects\\todo-ornot-todo\\src\\todoDB.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":9,"column":8,"nodeType":"57","messageId":"58","endLine":9,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":22},{"ruleId":"55","severity":1,"message":"60","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":17},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'results' is defined but never used.","Identifier","unusedVar","'createResult' is defined but never used.","'weekDay' is assigned a value but never used.",["64"],["65"],"'dayPart' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]